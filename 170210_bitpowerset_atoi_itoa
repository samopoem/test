


//atoi itoa
#if 1
#include <stdio.h>
int my_strlen(char str[])
{
	int i = 0, cnt = 0;
	while (str[i++] != '\0')
	{
		cnt++;
	}
	return cnt;

}
void my_strrev(char str[])
{
	int len = 0, i;
	char t;

	len = my_strlen(str);

	for (i = 0; i<len / 2; i++)
	{
		t = str[i];
		str[i] = str[len - 1 - i];
		str[len - 1 - i] = t;
	}
}

void my_itoa(int x, char str[])
{
	int count = 0;
	int i = 0, y;

	while (x != 0)
	{
		y = x % 10;
		str[i++] = y + '0';
		x /= 10;
	}
	str[i] = '\0';
	my_strrev(str);
}
int my_atoi(const char str[])
{
	int value = 0, digit, c, i = 0;
	while ((c = str[i]) != '\0')
	{
		if (c >= '0' && c <= '9')
			digit = c - '0';
		else
			break;
		i++;
		value = (value * 10) + digit;
	}

	return value;
}

int main()
{
	int x = 123;
	char str[100];

	my_itoa(x, str);
	printf("%s\n", str);

	x = my_atoi(str);
	printf("%d\n", x);

	return 0;
}


#endif



//부분집합 비트처리
#if 0
#include <stdio.h>

int main()
{

	int arr[10] = { -1, 3, -9, 6, 7, -6, 1, 5, 4, -2 };

	int N = 5;
	/*for (int i = 0; i < 1<<N; i++)
	{
		for (int j = 0; j < N; j++)
		{
			int temp = (i & (1 << (N-j-1))) > 0 ? 1 : 0;
			printf("%d ", temp);
		}
		printf("\n");
	}*/

	for (int i = 0; i < (1 << N); i++)
	{
		int sum = 0;
		for (int j = 0; j < N; j++)
		{
			int temp = i&(1 << j);
			if (temp)
			{
				sum += arr[j];
			}
		}
		if (sum == 0)
		{
			for (int j = 0; j < N; j++)
			{
				int temp = i&(1 << j);
				if(temp) printf("%d ", arr[j]);
			}
			printf("\n");
		}
	}

}



#endif
