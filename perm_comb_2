#include <stdio.h>char str[] = "ABCDE";char sel[5];void print_arr(int n){ for (int i = 0; i < n; i++) printf("%c ", sel[i]); printf("\n");}void perm(int n, int r) // 순열 = nPr{ int cnt = 0; for (int i = 0; i < n; i++) {  for (int j = 0; j < n; j++)  {   if (i == j) continue;   for (int k = 0; k < n; k++)   {    if (k == i || k == j) continue;    printf("%2d> %c%c%c\n", ++cnt, str[i], str[j], str[k]);   }  } }}void perm_bit(int n, int r) // 순열 = nPr{ int cnt = 0, bit[5] = { 0 }; for (int i = 0; i < n; i++) {  bit[i] = 1;  for (int j = 0; j < n; j++)  {   if (bit[j]) continue;   bit[j] = 1;   for (int k = 0; k < n; k++)   {    if (bit[k]) continue;    bit[k] = 1;    printf("%2d> %c%c%c\n", ++cnt, str[i], str[j], str[k]);    bit[k] = 0;   }   bit[j] = 0;  }  bit[i] = 0; }}void perm_re(int n, int r) // 중복순열{ int cnt = 0; for (int i = 0; i < n; i++) {  for (int j = 0; j < n; j++)  {   for (int k = 0; k < n; k++)   {    printf("%2d> %c%c%c\n", ++cnt, str[i], str[j], str[k]);   }  } }}void comb(int n, int r) // 조합{ int cnt = 0; for (int i = 0; i < n; i++) {  for (int j = i + 1; j < n; j++)  {   for (int k = j + 1; k < n; k++)   {    printf("%2d> %c%c%c\n", ++cnt, str[i], str[j], str[k]);   }  } }}void comb_re(int n, int r) // 중복 조합{ int cnt = 0; for (int i = 0; i < n; i++) {  for (int j = i; j < n; j++)  {   for (int k = j; k < n; k++)   {    printf("%2d> %c%c%c\n", ++cnt, str[i], str[j], str[k]);   }  } }}int main(){ //perm(5, 3); // 순열 nPr //perm_re(5, 3); // 중복 순열 //comb(5, 3); // 조합 comb_re(5, 3); // 중복 조합 return 0;}
