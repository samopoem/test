#include <stdio.h>char str[] = "ABCDE";char sel[5];int cnt;void print_arr(int n){ printf("%2d> ", ++cnt); for (int i = 0; i < n; i++) printf("%c ", sel[i]); printf("\n");}int bit[5];void perm(int k, int n, int r) // 순열 = nPr{ if (k == r) {  print_arr(r);  return; } for (int i = 0; i < n; i++) {  if (bit[i]) continue;  bit[i] = 1;    sel[k] = str[i];  perm(k + 1, n, r);  bit[i] = 0; }}void perm_re(int k, int n, int r) // 중복순열{ if (k == r) {  print_arr(r);  return; } for (int i = 0; i < n; i++) {  sel[k] = str[i];  perm_re(k + 1, n, r); }}void comb(int k, int n, int r, int start) // 조합{ if (k == r) {  print_arr(r);  return; } for (int i = start; i < n; i++) {  sel[k] = str[i];  comb(k + 1, n, r, i + 1); }}void comb_re(int k, int n, int r, int start) // 중복 조합{ if (k == r) {  print_arr(r);  return; } for (int i = start; i < n; i++) {  sel[k] = str[i];  comb_re(k + 1, n, r, i); }}int main(){ perm(0, 5, 3); // 순열 nPr //perm_re(0, 5, 3); // 중복 순열 //comb(0, 5, 3, 0); // 조합 //comb_re(0, 5, 3, 0); // 중복 조합 return 0;}
